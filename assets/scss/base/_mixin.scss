
@mixin clearfix {
	zoom:1;

	&:after {
		content: "";
		display: table;
		clear: both;
	}

}

@mixin absolute-list-circle($size) {
	position: absolute;
	border-radius: 50%;
	width: $size;
	height: $size;
	top: $size / 2;
	margin-top: $size / 4;
}

//-----------gradient---------------
@mixin background-gradient($start-color, $end-color, $orientation) {
	background: $start-color;

	@if $orientation == 'vertical' {
		background: -webkit-linear-gradient(top, $start-color, $end-color);
		background: linear-gradient(to bottom, $start-color, $end-color);
	} @else if $orientation == 'horizontal' {
		background: -webkit-linear-gradient(left, $start-color, $end-color);
		background: linear-gradient(to right, $start-color, $end-color);
	} @else {
		background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
		background: radial-gradient(ellipse at center, $start-color, $end-color);
	}
}

//-------------font face--------------------
@mixin font-face($font-name, $file-name) {
	@font-face {
		font-family: quote($font-name);
		src: url('assets/fonts/'+ $file-name + '.eot');
		src: url('assets/fonts/'+ $file-name + '.eot?#iefix')  format('embedded-opentype'),
					 url('assets/fonts/'+ $file-name + '.woff') format('woff'),
					 url('assets/fonts/'+ $file-name + '.ttf')  format('truetype'),
					 url('assets/fonts/'+ $file-name + '.svg##{$font-name}')  format('svg');
		font-weight: normal;
		font-style: normal;
	}
}

//-------------input placeholder---------------------
@mixin placeholder($color, $font){
	&::-webkit-input-placeholder { color:$color; font-family:$font;}
	&::-moz-placeholder { color:$color; font-family:$font;}
	&:-ms-input-placeholder { color:$color; font-family:$font;}
	&:-moz-placeholder { color:$color; font-family:$font;}
}

@mixin columns($count, $gap){
	-webkit-column-count: $count;
	-moz-column-count:    $count;
	column-count:         $count;

	-webkit-column-gap:   $gap;
	-moz-column-gap:      $gap;
	column-gap:           $gap;
}

//-------------String Replace---------------------

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

//-------------Font Face---------------------------

@mixin font-face($name, $file_name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
					eot: "?#iefix",
					svg: "#" + str-replace($file_name, " ", "_")
	);

	$formats: (
					eot: "embedded-opentype",
					otf: "opentype",
					ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: url(quote($path + ".eot"));
		src: $src;
	}
}

@mixin hover-svg-in-block($parent) {
	.#{$parent} {
		svg {
			line, polygon, rect, polyline, path, circle, ellipse {
				transition-duration: $time;
				transition-timing-function: ease;
				transition-property: stroke,fill;
			}
		}

		&:not(:hover) svg {
			line, polygon, rect, polyline, path, circle, ellipse {
				stroke: $light_color !important;
			}
			.svg__fl {
				fill: $light_color !important;
			}
			.svg__no-st {
				stroke: none !important;
			}
		}
	}
}

@mixin placeholder {
	&::-webkit-input-placeholder {@content}
	&:-moz-placeholder           {@content}
	&::-moz-placeholder          {@content}
	&:-ms-input-placeholder      {@content}
}

@mixin animation($properies...) {
	transition-duration: $time;
	transition-timing-function: ease;
	transition-property: $properies;
}
