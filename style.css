/*!
 * -------------------------------------
 * Theme Name: wp-gulp-starter-kit
 * Theme URI: https://github.com/yuchiko/wp-gulp-starter-kit
 * Author: Yuriy Byts
 * Author URI: https://github.com/yuchiko/
 * Description: Custom wp theme starter kit
 * Version: 1.0
 * -------------------------------------
 */
[class*=" col-"], [class^=col-], .post-excerpt {
  display: inline-block;
  vertical-align: top; }

.btn {
  display: inline-block;
  vertical-align: middle; }

.btn {
  border: none;
  position: relative;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  text-decoration: none; }
  .btn:active {
    box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.4); }

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  vertical-align: baseline;
  box-sizing: border-box; }

html {
  line-height: 1; }

body {
  font-family: "Calibre", sans-serif, serif;
  line-height: 1; }

ol, ul {
  list-style: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle; }

q, blockquote {
  quotes: none; }
  q:before, q:after, blockquote:before, blockquote:after {
    content: "";
    content: none; }

img {
  max-width: 100%;
  height: auto;
  border: none; }

a {
  text-decoration: none; }

article, aside, details, figcaption, figure, footer, header, main, menu, nav, section, summary {
  display: block;
  box-sizing: border-box; }

:focus {
  outline: none; }

h1, h2, h3, h4, h5, h6 {
  font-weight: normal; }

.cf:before, .cf:after {
  content: '.';
  display: block;
  overflow: hidden;
  visibility: hidden;
  font-size: 0;
  line-height: 0;
  width: 0;
  height: 0; }

.cf:after {
  clear: both; }

.col-1-1 {
  width: 100%; }

.col-1-2 {
  width: 50%; }

.col-1-3 {
  width: 33.33333%; }

.col-2-3 {
  width: 66.66667%; }

.col-1-4 {
  width: 25%; }

.col-3-4 {
  width: 75%; }

.col-1-5 {
  width: 20%; }

.col-2-5 {
  width: 40%; }

.col-3-5 {
  width: 60%; }

.col-4-5 {
  width: 80%; }

.col-1-6 {
  width: 16.66667%; }

.col-5-6 {
  width: 83.33333%; }

[class*=" col-"], [class^=col-] {
  padding-right: 2rem;
  padding-left: 2rem; }

html {
  font-size: 10px;
  font-size: 0.625rem;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: transparent;
  -webkit-tap-highlight-color: transparent; }

body {
  font: 1.5rem/2.4rem "Calibre", sans-serif;
  font-weight: 400;
  color: #3f4147; }

h2, .h2 {
  font-weight: 600;
  font-size: 3rem;
  line-height: 3.5rem;
  color: #454545;
  text-transform: uppercase; }

h3, .h3 {
  font-weight: 600;
  font-size: 2.8rem;
  line-height: 3rem;
  color: #3f4147;
  text-transform: uppercase; }

h4, .h4 {
  font-weight: 600;
  font-size: 1.5rem;
  line-height: 2rem;
  color: #3f4147;
  text-transform: uppercase; }

p {
  margin-bottom: 2rem; }

a {
  color: #a70c5d;
  text-decoration: underline; }

strong, b, .strong {
  font-weight: 600; }

.img--responsive {
  width: 100%; }

.wrap {
  display: block;
  max-width: 124rem;
  margin: 0 auto;
  position: relative;
  padding-left: 4rem;
  padding-right: 4rem; }
  .wrap--grid {
    font-size: 0; }
    .wrap--grid > :not(.wrap--grid) {
      font-size: 1.6rem; }

ul li {
  position: relative;
  padding-left: 2.4rem; }

.text-center {
  text-align: center; }

.btn {
  background: #a70c5d;
  color: #fff;
  font-size: 1.1rem;
  line-height: 3rem;
  font-weight: 900;
  text-transform: uppercase;
  padding: 1rem 5.4rem;
  border-radius: 9.39rem;
  margin-bottom: 2rem;
  box-shadow: inset 0 0 0 0.1rem #a70c5d;
  -webkit-transition-duration: 0.3s;
          transition-duration: 0.3s;
  -webkit-transition-timing-function: ease;
          transition-timing-function: ease;
  -webkit-transition-property: box-shadow, background, color;
  transition-property: box-shadow, background, color; }
  .btn:hover {
    background: transparent;
    color: #3f4147;
    box-shadow: inset 0 0 0 0.4rem #a70c5d; }

@-webkit-keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@-webkit-keyframes dash {
  to {
    stroke-dashoffset: 0; } }

@keyframes dash {
  to {
    stroke-dashoffset: 0; } }

@-webkit-keyframes fill {
  to {
    fill: #a70c5d; } }

@keyframes fill {
  to {
    fill: #a70c5d; } }

.burger {
  position: relative;
  background: none;
  border: none;
  width: 3rem;
  height: 2rem;
  -webkit-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: .5s ease-in-out;
  transition: .5s ease-in-out;
  cursor: pointer; }
  .burger span {
    display: block;
    position: absolute;
    width: 100%;
    height: .5rem;
    background: #3f4147;
    border-radius: .9rem;
    opacity: 1;
    left: 0;
    -webkit-transform: rotate(0deg) translateZ(0);
            transform: rotate(0deg) translateZ(0);
    -webkit-transition-duration: 0.5s;
            transition-duration: 0.5s;
    -webkit-transition-timing-function: ease;
            transition-timing-function: ease;
    -webkit-transition-property: left, top, opacity, -webkit-transform;
    transition-property: left, top, opacity, -webkit-transform;
    transition-property: transform, left, top, opacity;
    transition-property: transform, left, top, opacity, -webkit-transform; }
    .burger span:nth-child(1) {
      top: 0; }
    .burger span:nth-child(2) {
      top: 1rem; }
    .burger span:nth-child(3) {
      top: 2rem; }
  .burger:hover:not(.open) span:nth-child(1) {
    -webkit-transform: translateX(0.2rem) translateZ(0);
            transform: translateX(0.2rem) translateZ(0); }
  .burger:hover:not(.open) span:nth-child(2) {
    -webkit-transform: translateX(-0.2rem) translateZ(0);
            transform: translateX(-0.2rem) translateZ(0); }
  .burger:hover:not(.open) span:nth-child(3) {
    -webkit-transform: translateX(0.2rem) translateZ(0);
            transform: translateX(0.2rem) translateZ(0); }
  .open .burger span:nth-child(1) {
    top: 1rem;
    -webkit-transform: rotate(135deg);
    transform: rotate(135deg); }
  .open .burger span:nth-child(2) {
    opacity: 0;
    left: -6rem; }
  .open .burger span:nth-child(3) {
    top: 1rem;
    -webkit-transform: rotate(-135deg);
    transform: rotate(-135deg); }

.mobile-nav {
  position: fixed;
  visibility: hidden;
  opacity: 0;
  background: #3f4147;
  width: 100%;
  height: 100%;
  padding: 7rem 2rem 4rem;
  top: 0;
  left: 0;
  z-index: 5;
  -webkit-transform: translateY(-100%) translateZ(0);
          transform: translateY(-100%) translateZ(0);
  -webkit-transition-duration: 1s;
          transition-duration: 1s;
  -webkit-transition-timing-function: ease;
          transition-timing-function: ease;
  -webkit-transition-property: opacity, visibility, -webkit-transform;
  transition-property: opacity, visibility, -webkit-transform;
  transition-property: transform, opacity, visibility;
  transition-property: transform, opacity, visibility, -webkit-transform; }
  .mobile-nav.open {
    visibility: visible;
    opacity: 1;
    -webkit-transform: translateY(0%) translateZ(0);
            transform: translateY(0%) translateZ(0); }
  .mobile-nav__menu li {
    color: #ffffff;
    font-size: 3rem;
    line-height: 4rem;
    font-weight: 300; }
    .mobile-nav__menu li a {
      color: inherit;
      text-decoration: none; }
  .mobile-nav__burger {
    position: absolute;
    top: 0;
    right: 0;
    margin: 4rem; }
    .mobile-nav__burger span {
      background: #ffffff; }

@media (min-width: 1440px) {
  html {
    font-size: 0.699304vw; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
